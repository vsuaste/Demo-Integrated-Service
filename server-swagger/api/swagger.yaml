---
swagger: "2.0"
info:
  description: "This is a sample server which integrates local databases with existing\
    \ webservices. In this case we are connecting the model Specie, taken from http://enciclovida.mx/especies,\
    \ and one  two models Researcher and Experiment stored in a local database."
  version: "1.0.0"
  title: "Integrated Service"
host: "localhost:10010"
basePath: "/v1"
tags:
- name: "Specie"
  description: "Everything about Specie"
- name: "Project"
  description: "Everything about Project"
- name: "Researcher"
  description: "Operations about Researcher"
schemes:
- "http"
paths:
  /projects:
    get:
      tags:
      - "Project"
      summary: "Find all projects"
      operationId: "projects"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "input"
        in: "query"
        description: "Search argument for filtering projects"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Project"
  /project/{projectId}:
    get:
      tags:
      - "Project"
      summary: "Find one project by its ID"
      operationId: "readOneProject"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Project"
      x-swagger-router-controller: "Project"
    put:
      tags:
      - "Project"
      summary: "Update a given project given by its ID"
      operationId: "updateProject"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project to delete"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Project object to updated"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Project"
    delete:
      tags:
      - "Project"
      summary: "Delete one project by its ID"
      operationId: "deleteProject"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Project not found"
      x-swagger-router-controller: "Project"
  /addProject:
    post:
      tags:
      - "Project"
      summary: "Add an project to database"
      operationId: "addProject"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Project object to be added to database"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Project"
  /researchers:
    get:
      tags:
      - "Researcher"
      summary: "Find all researchers"
      operationId: "researchers"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "input"
        in: "query"
        description: "Search argument for filtering researchers"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Researcher"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Researcher"
  /researcher/{researcherId}:
    get:
      tags:
      - "Researcher"
      summary: "Find one researcher by its ID"
      operationId: "readOneResearcher"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "researcherId"
        in: "path"
        description: "ID of researcher to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Researcher"
      x-swagger-router-controller: "Researcher"
    put:
      tags:
      - "Researcher"
      summary: "Update a given researcher given by its ID"
      operationId: "updateResearcher"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "researcherId"
        in: "path"
        description: "ID of researcher to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Researcher object to updated"
        required: true
        schema:
          $ref: "#/definitions/Researcher"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Researcher"
    delete:
      tags:
      - "Researcher"
      summary: "Delete one researcher by its ID"
      operationId: "deleteResearcher"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "researcherId"
        in: "path"
        description: "ID of researcher to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Researcher not found"
      x-swagger-router-controller: "Researcher"
  /addResearcher:
    post:
      tags:
      - "Researcher"
      summary: "Add a researcher to database"
      operationId: "addResearcher"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Researcher object to be added to database"
        required: true
        schema:
          $ref: "#/definitions/Researcher"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Researcher"
  /specie/{specieId}:
    get:
      tags:
      - "Specie"
      summary: "Find one specie by its ID"
      operationId: "readOneSpecie"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "specieId"
        in: "path"
        description: "ID of specie to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Specie"
      x-swagger-router-controller: "Specie"
definitions:
  Project:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      specie:
        $ref: "#/definitions/Specie"
      researchers:
        type: "array"
        items:
          $ref: "#/definitions/Researcher"
    example:
      specie:
        e_nombre_comun_principal: "e_nombre_comun_principal"
        e_foto_principal: "e_foto_principal"
        projects: "null"
        nombre_cientifico: "nombre_cientifico"
        nombre: "nombre"
      researchers:
      - firstName: "firstName"
        lastName: "lastName"
        projects: []
        email: "email"
      - firstName: "firstName"
        lastName: "lastName"
        projects: []
        email: "email"
      name: "name"
      description: "description"
  Specie:
    type: "object"
    properties:
      nombre:
        type: "string"
      e_nombre_comun_principal:
        type: "string"
      e_foto_principal:
        type: "string"
      nombre_cientifico:
        type: "string"
      projects:
        $ref: "#/definitions/Project"
    example:
      e_nombre_comun_principal: "e_nombre_comun_principal"
      e_foto_principal: "e_foto_principal"
      projects: "null"
      nombre_cientifico: "nombre_cientifico"
      nombre: "nombre"
  Researcher:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      projects:
        type: "array"
        items:
          $ref: "#/definitions/Project"
    example:
      firstName: "firstName"
      lastName: "lastName"
      projects: []
      email: "email"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
